definitions:
  dto.Passport:
    properties:
      passportNumber:
        type: string
    type: object
  dto.Person:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      passportNumber:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  dto.TaskTimeResult:
    properties:
      idtask:
        type: string
      task_name:
        type: string
      total_time:
        type: string
    type: object
  models.DateStartEnd:
    properties:
      end:
        type: string
      start:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Ok:
    properties:
      msg:
        type: string
      status:
        type: integer
    type: object
  models.PeopleResp:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      people:
        items:
          $ref: '#/definitions/dto.Person'
        type: array
      total:
        type: integer
    type: object
  models.TaskCreate:
    properties:
      idPerson:
        type: string
      task_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /info:
    get:
      consumes:
      - application/json
      description: Получение информации о человеке по серии и номеру паспорта
      parameters:
      - description: Серия паспорта (только цифры)
        in: query
        name: passportSerie
        required: true
        type: string
      - description: Номер паспорта (только цифры)
        in: query
        name: passportNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о человеке
          schema:
            $ref: '#/definitions/dto.Person'
        "400":
          description: Неверный формат серии или номера паспорта
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение информации о человеке
      tags:
      - people
  /people:
    get:
      consumes:
      - application/json
      description: Получение списка людей с возможностью фильтрации по различным полям
        и пагинацией
      parameters:
      - description: Фамилия человека
        in: query
        name: surname
        type: string
      - description: Имя человека
        in: query
        name: name
        type: string
      - description: Отчество человека
        in: query
        name: patronymic
        type: string
      - description: Адрес человека
        in: query
        name: address
        type: string
      - description: Номер паспорта человека
        in: query
        name: passport_number
        type: string
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Количество записей на странице (по умолчанию 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список людей
          schema:
            $ref: '#/definitions/models.PeopleResp'
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение списка людей с фильтрацией и пагинацией
      tags:
      - people
    post:
      consumes:
      - application/json
      description: Создание новой записи о человеке по номеру паспорта
      parameters:
      - description: Паспортные данные
        in: body
        name: passport
        required: true
        schema:
          $ref: '#/definitions/dto.Passport'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Person'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Конфликт данных
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Создание человека
      tags:
      - people
  /people/{uuid}:
    delete:
      consumes:
      - application/json
      description: Удаление записи о человеке по UUID
      parameters:
      - description: UUID человека для удаления
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Ok'
        "400":
          description: Неверный UUID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек не найден
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Удаление человека
      tags:
      - people
    get:
      consumes:
      - application/json
      description: Получение информации о человеке по его уникальному идентификатору
      parameters:
      - description: Уникальный идентификатор человека (UUID)
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о человеке
          schema:
            $ref: '#/definitions/dto.Person'
        "400":
          description: Неверный формат UUID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек с указанным UUID не найден
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение информации о человеке по UUID
      tags:
      - people
    patch:
      consumes:
      - application/json
      description: Обновляет информацию о человеке по его UUID
      parameters:
      - description: UUID человека
        in: path
        name: uuid
        required: true
        type: string
      - description: Информация о человеке для обновления
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.Person'
      produces:
      - application/json
      responses:
        "200":
          description: Обновленная информация о человеке
          schema:
            $ref: '#/definitions/dto.Person'
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек с указанным UUID не найден
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Обновление информации о человеке
      tags:
      - people
  /people/{uuid}/create-task:
    post:
      consumes:
      - application/json
      description: Создает новую задачу для человека по его UUID
      parameters:
      - description: UUID человека
        in: path
        name: uuid
        required: true
        type: string
      - description: Данные для создания задачи
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.TaskCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Созданная задача
          schema:
            $ref: '#/definitions/models.Ok'
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек с указанным UUID не найден
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Создание новой задачи для человека
      tags:
      - tasks
  /people/{uuid}/worktime:
    post:
      consumes:
      - application/json
      description: Возвращает список задач с временем работы в указанном диапазоне
        для указанного человека по его UUID
      parameters:
      - description: UUID человека
        in: path
        name: uuid
        required: true
        type: string
      - description: Временной диапазон
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.DateStartEnd'
      produces:
      - application/json
      responses:
        "200":
          description: Список задач с временем работы
          schema:
            items:
              $ref: '#/definitions/dto.TaskTimeResult'
            type: array
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек с указанным UUID не найден или нет задач в указанном
            диапазоне
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Получение списка задач с временем работы
      tags:
      - tasks
  /people/{uuidP}/{uuidT}/complete:
    get:
      consumes:
      - application/json
      description: Завершает задачу для человека по его UUID и UUID задачи
      parameters:
      - description: UUID человека
        in: path
        name: uuidP
        required: true
        type: string
      - description: UUID задачи
        in: path
        name: uuidT
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешное завершение задачи
          schema:
            $ref: '#/definitions/models.Ok'
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек или задача с указанным UUID не найдены
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Завершение задачи для человека
      tags:
      - tasks
  /people/{uuidP}/{uuidT}/pause:
    get:
      consumes:
      - application/json
      description: Приостанавливает таймер для задачи указанного человека по его UUID
        и UUID задачи
      parameters:
      - description: UUID человека
        in: path
        name: uuidP
        required: true
        type: string
      - description: UUID задачи
        in: path
        name: uuidT
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешная приостановка таймера для задачи
          schema:
            $ref: '#/definitions/models.Ok'
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек или задача с указанным UUID не найдены
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Приостановка таймера для задачи
      tags:
      - tasks
  /people/{uuidP}/{uuidT}/start:
    get:
      consumes:
      - application/json
      description: Начинает таймер для задачи указанного человека по его UUID и UUID
        задачи
      parameters:
      - description: UUID человека
        in: path
        name: uuidP
        required: true
        type: string
      - description: UUID задачи
        in: path
        name: uuidT
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешное начало таймера для задачи
          schema:
            $ref: '#/definitions/models.Ok'
        "400":
          description: Некорректные параметры запроса
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Человек или задача с указанным UUID не найдены
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Начало таймера для задачи
      tags:
      - tasks
swagger: "2.0"
